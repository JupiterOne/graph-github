// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SinglePullRequestQuery #buildQuery first query - no cursors 1`] = `
Object {
  "query": "
      query (
        $pullRequestNumber: Int!
        $repoName: String!
        $repoOwner: String!
        $maxLimit: Int!
        $commitsCursor: String
        $reviewsCursor: String
        $labelsCursor: String
      ) {
          repository(name: $repoName, owner: $repoOwner) {
            pullRequest(number: $pullRequestNumber) {
              ...
  on PullRequest {
    author {
      ...on User {
    name
    login
  }
    }
    baseRefName
    baseRefOid
    baseRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    body
    changedFiles
    createdAt
    databaseId
    headRefName
    headRefOid
    headRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    id
    mergeCommit {
      ...on Commit {
        commitUrl
        oid
      }
      associatedPullRequests(first: 1) {
        nodes {
          id
          number
        }
      }
    }
    merged
    mergedAt
    mergedBy {
      ...on User {
    name
    login
  }
    }
    number
    reviewDecision
    state
    title
    updatedAt
    url
  }
              
    commits(first: $maxLimit, after: $commitsCursor) {
      totalCount
      nodes {
        commit {
          ...on Commit {
    oid
    message
    authoredDate
    author {
      user {
        login # this used to be ...userFields
      }
    }
  }
        }
      }
      
      pageInfo {
        endCursor
        hasNextPage
      }
    }
              
    reviews(first: $maxLimit, after: $reviewsCursor) {
      totalCount
      nodes {
        ...on PullRequestReview {
    commit {
      oid
    }
    author {
      ...on User {
          name
          login
        }
    }
    state
  }
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    }
              
    labels(first: $maxLimit, after: $labelsCursor) {
      totalCount
      nodes {
        name
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    } 
            }
          }
          ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxLimit": 100,
    "pullRequestNumber": 5,
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
  },
}
`;

exports[`SinglePullRequestQuery #buildQuery followup query with cursors 1`] = `
Object {
  "query": "
      query (
        $pullRequestNumber: Int!
        $repoName: String!
        $repoOwner: String!
        $maxLimit: Int!
        
        
        $labelsCursor: String
      ) {
          repository(name: $repoName, owner: $repoOwner) {
            pullRequest(number: $pullRequestNumber) {
              ...
  on PullRequest {
    author {
      ...on User {
    name
    login
  }
    }
    baseRefName
    baseRefOid
    baseRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    body
    changedFiles
    createdAt
    databaseId
    headRefName
    headRefOid
    headRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    id
    mergeCommit {
      ...on Commit {
        commitUrl
        oid
      }
      associatedPullRequests(first: 1) {
        nodes {
          id
          number
        }
      }
    }
    merged
    mergedAt
    mergedBy {
      ...on User {
    name
    login
  }
    }
    number
    reviewDecision
    state
    title
    updatedAt
    url
  }
              
              
              
    labels(first: $maxLimit, after: $labelsCursor) {
      totalCount
      nodes {
        name
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    } 
            }
          }
          ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "labelsCursor": "labelsEndCursor",
    "maxLimit": 100,
    "pullRequestNumber": 5,
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
  },
}
`;

exports[`SinglePullRequestQuery #buildQuery followup query with partial cursors 1`] = `
Object {
  "query": "
      query (
        $pullRequestNumber: Int!
        $repoName: String!
        $repoOwner: String!
        $maxLimit: Int!
        
        
        $labelsCursor: String
      ) {
          repository(name: $repoName, owner: $repoOwner) {
            pullRequest(number: $pullRequestNumber) {
              ...
  on PullRequest {
    author {
      ...on User {
    name
    login
  }
    }
    baseRefName
    baseRefOid
    baseRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    body
    changedFiles
    createdAt
    databaseId
    headRefName
    headRefOid
    headRepository {
      name
      owner {
        ...on RepositoryOwner {
          login
        }
      }
    }
    id
    mergeCommit {
      ...on Commit {
        commitUrl
        oid
      }
      associatedPullRequests(first: 1) {
        nodes {
          id
          number
        }
      }
    }
    merged
    mergedAt
    mergedBy {
      ...on User {
    name
    login
  }
    }
    number
    reviewDecision
    state
    title
    updatedAt
    url
  }
              
              
              
    labels(first: $maxLimit, after: $labelsCursor) {
      totalCount
      nodes {
        name
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    } 
            }
          }
          ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "labelsCursor": "Y3Vyc2==",
    "maxLimit": 100,
    "pullRequestNumber": 5,
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
  },
}
`;

exports[`SinglePullRequestQuery #iteratePullRequest successfully paginates 1`] = `
Object {
  "commits": Array [
    Object {
      "id": "commit1",
    },
  ],
  "id": "MDExOlB1bGxSZXF1ZXN0MTA=",
  "labels": Array [
    Object {
      "id": "label1=",
      "name": "bug",
    },
    Object {
      "id": "label2=",
      "name": "documentation",
    },
    Object {
      "id": "label3=",
      "name": "first-task",
    },
    Object {
      "id": "label4=",
      "name": "feature",
    },
  ],
  "mergeCommit": Object {
    "associatedPullRequest": undefined,
    "id": "C_kwDOIAVVA9oAKDg1NjNlOWIyZDYzMzRiNzUwZjhmN2I2MzA4NTgxODg5NTBkMmFiOTI",
  },
  "reviews": Array [
    Object {
      "id": "review1",
    },
    Object {
      "id": "review2",
    },
    Object {
      "id": "review3==",
    },
  ],
  "title": "Update CHANGELOG.md",
}
`;

exports[`SinglePullRequestQuery #processResponseData Pulling all data out 1`] = `
Object {
  "queryState": Object {
    "commits": Object {
      "endCursor": "MQ",
      "hasNextPage": false,
    },
    "labels": Object {
      "endCursor": "Y3Vyc2==",
      "hasNextPage": true,
    },
    "rateLimit": Object {
      "cost": 1,
      "limit": 5000,
      "remaining": 4998,
      "resetAt": "2022-03-07T22:04:07Z",
    },
    "reviews": Object {
      "endCursor": "Y3Vyc29yOnYyOpO0M",
      "hasNextPage": true,
    },
  },
  "resource": Object {
    "commits": Array [
      Object {
        "id": "commit1",
      },
    ],
    "id": "MDExOlB1bGxSZXF1ZXN0MTA=",
    "labels": Array [
      Object {
        "id": "label1=",
        "name": "bug",
      },
      Object {
        "id": "label2=",
        "name": "documentation",
      },
    ],
    "mergeCommit": Object {
      "associatedPullRequest": Object {
        "id": "PR_kwDOIAVVA84_DshD",
        "number": 2,
        "reviewDecision": null,
        "state": "MERGED",
        "url": "https://github.com/j1-ingest/ubiquitous-umbrella/pull/2",
      },
      "id": "C_kwDOIAVVA9oAKDg1NjNlOWIyZDYzMzRiNzUwZjhmN2I2MzA4NTgxODg5NTBkMmFiOTI",
    },
    "reviews": Array [
      Object {
        "id": "review1",
      },
      Object {
        "id": "review2",
      },
    ],
    "title": "Update CHANGELOG.md",
  },
}
`;

exports[`SinglePullRequestQuery #processResponseData Pulls partial data 1`] = `
Object {
  "queryState": Object {
    "commits": Object {
      "endCursor": "MQ",
      "hasNextPage": false,
    },
    "labels": Object {
      "endCursor": "Y3Vyc2==",
      "hasNextPage": true,
    },
    "rateLimit": Object {
      "cost": 1,
      "limit": 5000,
      "remaining": 4998,
      "resetAt": "2022-03-07T22:04:07Z",
    },
    "reviews": undefined,
  },
  "resource": Object {
    "commits": Array [
      Object {
        "id": "MDY6",
      },
    ],
    "id": "MDExOlB1bGxSZXF1ZXN0MTA=",
    "labels": Array [
      Object {
        "id": "MDU6TGFiZWwxODE=",
        "name": "bug",
      },
      Object {
        "id": "MDU6TGFiZWwxODI=",
        "name": "documentation",
      },
    ],
    "reviews": Array [],
    "title": "singleQueryWithPartialInnerResources",
  },
}
`;
