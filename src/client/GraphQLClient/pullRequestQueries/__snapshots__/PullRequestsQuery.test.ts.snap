// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PullRequestsQuery #buildQuery first private query - no query state 1`] = `
Object {
  "query": "
      query (
        $searchQuery: String!,
        $repoOwner: String!,
        $repoName: String!,
        $maxSearchLimit: Int!,
        $pullRequestsCursor: String
      ) {
        
    search(first: $maxSearchLimit, type: ISSUE, query: $searchQuery) {
      issueCount
    }
  
        repository(owner: $repoOwner, name: $repoName) {
          pullRequests(orderBy: { field: UPDATED_AT, direction: DESC }, first: $maxSearchLimit, after: $pullRequestsCursor) {
            nodes {
              
  author {
    ...on User {
    name
    login
  }
  }
  baseRefName
  baseRefOid
  baseRepository {
    id
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
    isPrivate
  }
  body
  changedFiles
  createdAt
  databaseId
  headRefName
  headRefOid
  headRepository {
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
  }
  id
  
  merged
  mergedAt
  mergedBy {
    ...on User {
    name
    login
  }
  }
  number
  reviewDecision
  state
  title
  updatedAt
  url
  commits {
    totalCount
  }
  labels {
    totalCount
  }
  reviews {
    totalCount
  }

            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
        ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxSearchLimit": 25,
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
    "searchQuery": "is:pr repo:J1-Test/musical-palm-tree updated:>=2011-10-05T14:48:00.000Z",
  },
}
`;

exports[`PullRequestsQuery #buildQuery first query - no query state 1`] = `
Object {
  "query": "
      query (
        $searchQuery: String!,
        $repoOwner: String!,
        $repoName: String!,
        $maxSearchLimit: Int!,
        $pullRequestsCursor: String
      ) {
        
    search(first: $maxSearchLimit, type: ISSUE, query: $searchQuery) {
      issueCount
    }
  
        repository(owner: $repoOwner, name: $repoName) {
          pullRequests(orderBy: { field: UPDATED_AT, direction: DESC }, first: $maxSearchLimit, after: $pullRequestsCursor) {
            nodes {
              
  author {
    ...on User {
    name
    login
  }
  }
  baseRefName
  baseRefOid
  baseRepository {
    id
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
    isPrivate
  }
  body
  changedFiles
  createdAt
  databaseId
  headRefName
  headRefOid
  headRepository {
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
  }
  id
  mergeCommit {
            ...on Commit {
              commitUrl
              oid
            }
            associatedPullRequests(first: 1) {
              nodes {
                id
                number
              }
            }
          }
  merged
  mergedAt
  mergedBy {
    ...on User {
    name
    login
  }
  }
  number
  reviewDecision
  state
  title
  updatedAt
  url
  commits {
    totalCount
  }
  labels {
    totalCount
  }
  reviews {
    totalCount
  }

            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
        ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxSearchLimit": 25,
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
    "searchQuery": "is:pr repo:J1-Test/musical-palm-tree updated:>=2011-10-05T14:48:00.000Z",
  },
}
`;

exports[`PullRequestsQuery #buildQuery query with query state 1`] = `
Object {
  "query": "
      query (
        $searchQuery: String!,
        $repoOwner: String!,
        $repoName: String!,
        $maxSearchLimit: Int!,
        $pullRequestsCursor: String
      ) {
        
    search(first: $maxSearchLimit, type: ISSUE, query: $searchQuery) {
      issueCount
    }
  
        repository(owner: $repoOwner, name: $repoName) {
          pullRequests(orderBy: { field: UPDATED_AT, direction: DESC }, first: $maxSearchLimit, after: $pullRequestsCursor) {
            nodes {
              
  author {
    ...on User {
    name
    login
  }
  }
  baseRefName
  baseRefOid
  baseRepository {
    id
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
    isPrivate
  }
  body
  changedFiles
  createdAt
  databaseId
  headRefName
  headRefOid
  headRepository {
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
  }
  id
  mergeCommit {
            ...on Commit {
              commitUrl
              oid
            }
            associatedPullRequests(first: 1) {
              nodes {
                id
                number
              }
            }
          }
  merged
  mergedAt
  mergedBy {
    ...on User {
    name
    login
  }
  }
  number
  reviewDecision
  state
  title
  updatedAt
  url
  commits {
    totalCount
  }
  labels {
    totalCount
  }
  reviews {
    totalCount
  }

            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
        ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxSearchLimit": 25,
    "pullRequestsCursor": "endCursor",
    "repoName": "musical-palm-tree",
    "repoOwner": "J1-Test",
    "searchQuery": "is:pr repo:J1-Test/musical-palm-tree updated:>=2011-10-05T14:48:00.000Z",
  },
}
`;

exports[`PullRequestsQuery #iteratePullRequests Pulling data out 1`] = `
Object {
  "closed": false,
  "id": "MDExOlB1bGxSZXF1ZXN0MTA=",
  "title": "Update CHANGELOG.md",
  "updatedAt": "2011-10-05T14:48:00.000Z",
}
`;

exports[`PullRequestsQuery #iteratePullRequests Pulling data out 2`] = `
Object {
  "query": "
      query (
        $searchQuery: String!,
        $repoOwner: String!,
        $repoName: String!,
        $maxSearchLimit: Int!,
        $pullRequestsCursor: String
      ) {
        
    search(first: $maxSearchLimit, type: ISSUE, query: $searchQuery) {
      issueCount
    }
  
        repository(owner: $repoOwner, name: $repoName) {
          pullRequests(orderBy: { field: UPDATED_AT, direction: DESC }, first: $maxSearchLimit, after: $pullRequestsCursor) {
            nodes {
              
  author {
    ...on User {
    name
    login
  }
  }
  baseRefName
  baseRefOid
  baseRepository {
    id
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
    isPrivate
  }
  body
  changedFiles
  createdAt
  databaseId
  headRefName
  headRefOid
  headRepository {
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
  }
  id
  mergeCommit {
            ...on Commit {
              commitUrl
              oid
            }
            associatedPullRequests(first: 1) {
              nodes {
                id
                number
              }
            }
          }
  merged
  mergedAt
  mergedBy {
    ...on User {
    name
    login
  }
  }
  number
  reviewDecision
  state
  title
  updatedAt
  url
  commits {
    totalCount
  }
  labels {
    totalCount
  }
  reviews {
    totalCount
  }

            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
        ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxSearchLimit": 25,
    "repoName": "happy-sunshine",
    "repoOwner": "J1-Test",
    "searchQuery": "is:pr repo:J1-Test/happy-sunshine updated:>=2011-10-05T14:48:00.000Z",
  },
}
`;

exports[`PullRequestsQuery #iteratePullRequests Pulling data out 3`] = `
Object {
  "query": "
      query (
        
        $repoOwner: String!,
        $repoName: String!,
        $maxSearchLimit: Int!,
        $pullRequestsCursor: String
      ) {
        
        repository(owner: $repoOwner, name: $repoName) {
          pullRequests(orderBy: { field: UPDATED_AT, direction: DESC }, first: $maxSearchLimit, after: $pullRequestsCursor) {
            nodes {
              
  author {
    ...on User {
    name
    login
  }
  }
  baseRefName
  baseRefOid
  baseRepository {
    id
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
    isPrivate
  }
  body
  changedFiles
  createdAt
  databaseId
  headRefName
  headRefOid
  headRepository {
    name
    owner {
      ...on RepositoryOwner {
        login
      }
    }
  }
  id
  mergeCommit {
            ...on Commit {
              commitUrl
              oid
            }
            associatedPullRequests(first: 1) {
              nodes {
                id
                number
              }
            }
          }
  merged
  mergedAt
  mergedBy {
    ...on User {
    name
    login
  }
  }
  number
  reviewDecision
  state
  title
  updatedAt
  url
  commits {
    totalCount
  }
  labels {
    totalCount
  }
  reviews {
    totalCount
  }

            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
        ...on Query {
    rateLimit {
      limit
      cost
      remaining
      resetAt
    }
  }
      }",
  "queryVariables": Object {
    "maxSearchLimit": 25,
    "pullRequestsCursor": "Y3Vyc29yOjI=",
    "repoName": "happy-sunshine",
    "repoOwner": "J1-Test",
  },
  "rateLimit": Object {
    "cost": 2,
  },
}
`;

exports[`PullRequestsQuery #processResponseData Pulling data out 1`] = `
Object {
  "pullRequests": Object {
    "endCursor": "Y3Vyc29yOjI=",
    "hasNextPage": true,
  },
  "rateLimit": Object {
    "cost": 2,
  },
}
`;

exports[`PullRequestsQuery #processResponseData Pulling data out 2`] = `
Object {
  "closed": false,
  "id": "MDExOlB1bGxSZXF1ZXN0MTA=",
  "title": "Update CHANGELOG.md",
  "updatedAt": "2011-10-05T14:48:00.000Z",
}
`;

exports[`PullRequestsQuery #processResponseData Pulling data out 3`] = `
Object {
  "closed": false,
  "id": "MDExOlB1bGxSZXF1ZXN0OQ==",
  "mergeCommit": Object {
    "associatedPullRequest": Object {
      "id": "PR_kwDOIAVVA84_DshD",
      "number": 2,
      "reviewDecision": null,
      "state": "MERGED",
      "url": "https://github.com/j1-ingest/ubiquitous-umbrella/pull/2",
    },
    "id": "C_kwDOIAVVA9oAKDg1NjNlOWIyZDYzMzRiNzUwZjhmN2I2MzA4NTgxODg5NTBkMmFiOTI",
    "oid": "8563e9b2d6334b750f8f7b630858188950d2ab92",
  },
  "title": "Create CHANGELOG.md #2",
  "updatedAt": "2011-10-05T14:48:00.000Z",
}
`;
