{
  "log": {
    "_recordingName": "GitHubGraphQLClient.fetchPullRequests.innerPagination",
    "creator": {
      "comment": "persister:JupiterOneIntegationFSPersister",
      "name": "Polly.JS",
      "version": "4.3.0"
    },
    "entries": [
      {
        "_id": "aadb03954d498cafcdffffac94111993",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept",
              "value": "application/vnd.github.machine-man-preview+json"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "jupiter-integration-github octokit-rest.js/18.9.0 octokit-core.js/3.5.1 Node.js/14.15.0 (darwin; x64)"
            },
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "0"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 810,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "queryString": [],
          "url": "https://api.github.com/app/installations/7498286/access_tokens"
        },
        "response": {
          "bodySize": 276,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 276,
            "text": "{\"token\":\"[REDACTED]\",\"expires_at\":\"2021-09-02T23:47:30Z\",\"permissions\":{\"members\":\"read\",\"organization_administration\":\"read\",\"metadata\":\"read\",\"pull_requests\":\"read\",\"statuses\":\"read\",\"vulnerability_alerts\":\"read\"},\"repository_selection\":\"all\"}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:30 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "276"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=60, s-maxage=60"
            },
            {
              "name": "vary",
              "value": "Accept, Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "etag",
              "value": "\"a742f9176cd8c66a42304b5ba424edbbd14dfad967cbfc777b493e3113c1cbc9\""
            },
            {
              "name": "x-github-media-type",
              "value": "github.v3; param=machine-man-preview; format=json"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "x-github-request-id",
              "value": "EDF3:9D28:2DE227:3106EC:61315482"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1036,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 201,
          "statusText": "Created"
        },
        "startedDateTime": "2021-09-02T22:47:30.617Z",
        "time": 153,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 153
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 3338,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequests: String, $query: String!, $commits: String, $reviews: String, $labels: String) {\\n    search(first: 2, after: $pullRequests, type: ISSUE, query: $query) {\\n        issueCount\\n        edges {\\n          node {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n          labels(first: 2, after: $labels) {\\n          totalCount\\n          edges {\\n            node {\\n              id\\n              name\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n        }\\n\\n        pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"query\":\"is:pr repo:JupiterOne/graph-whitehat is:closed updated:<=2019-04-01 \"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 8026,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 8026,
            "text": "{\"data\":{\"search\":{\"issueCount\":4,\"edges\":[{\"node\":{\"additions\":94,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"\",\"changedFiles\":8,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/6/checks\",\"closed\":true,\"closedAt\":\"2019-03-25T21:15:24Z\",\"createdAt\":\"2019-03-25T18:55:28Z\",\"deletions\":70,\"editor\":null,\"headRefName\":\"improvements\",\"headRefOid\":\"564c61781a4ec3783b635ce53320312db4b79f45\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjY0MjQ3Mjg1\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjI0Njg2OTZmYmZlMjczNjVhMzM3MzViZTlmNDk5ODFiYjUxM2EyOTY=\",\"oid\":\"2468696fbfe27365a33735be9f49981bb513a296\",\"message\":\"Merge pull request #6 from JupiterOne/improvements\\n\\nImprovements\",\"authoredDate\":\"2019-03-25T21:15:24Z\",\"changedFiles\":8,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/2468696fbfe27365a33735be9f49981bb513a296\",\"author\":{\"date\":\"2019-03-25T17:15:24-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-25T21:15:24Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":6,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"publishedAt\":\"2019-03-25T18:55:28Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Improvements\",\"updatedAt\":\"2019-03-25T21:15:27Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmRhMDRjZjYzNjRlNGZkNzNkMmRmNzMyNzE1Mzc1YTUwZTRiY2U3NTQ=\",\"oid\":\"da04cf6364e4fd73d2df732715375a50e4bce754\",\"message\":\"Classify CVEs as Vulnerabilities\\n\\nWe still need to have them as their own entities because according the\\nWhitehat API, a Vulnerability can be linked to more than\\none.\",\"authoredDate\":\"2019-03-21T19:07:39Z\",\"changedFiles\":2,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/da04cf6364e4fd73d2df732715375a50e4bce754\",\"author\":{\"date\":\"2019-03-21T15:07:39-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjRhNmVkOWU2OTc5ODgzMTBiNmE4MTg3NjQwYzNkYjAwY2Q5Zjc1MWQ=\",\"oid\":\"4a6ed9e697988310b6a8187640c3db00cd9f751d\",\"message\":\"Improve speed by making one request for findings\\n\\nThis is orders of magnitude faster. Like, 30 times. Over 300 seconds to\\nsub-10. I am literally retarded for doing it like I was before.\\n\\nAlso, fetch open AND closed findings, not just open findings.\",\"authoredDate\":\"2019-03-21T21:00:30Z\",\"changedFiles\":5,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/4a6ed9e697988310b6a8187640c3db00cd9f751d\",\"author\":{\"date\":\"2019-03-21T17:00:30-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"Mg\",\"hasNextPage\":true}},\"reviews\":{\"totalCount\":2,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE4NTY1NjQ5\",\"commit\":{\"oid\":\"faf56181ed330dbd46ba3527c3b99fedac4d2920\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"DISMISSED\",\"submittedAt\":\"2019-03-25T20:25:44Z\",\"updatedAt\":\"2019-03-25T20:57:44Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6#pullrequestreview-218565649\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE4NTg5MDUw\",\"commit\":{\"oid\":\"564c61781a4ec3783b635ce53320312db4b79f45\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"APPROVED\",\"submittedAt\":\"2019-03-25T21:14:43Z\",\"updatedAt\":\"2019-03-25T21:14:43Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6#pullrequestreview-218589050\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yNVQyMToxNDo0M1q0MjAxOS0wMy0yNVQyMToxNDo0M1rODQdneg==\",\"hasNextPage\":false}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}},{\"node\":{\"additions\":56,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"Tried to publish and an error told me that I needed to write some docs for docs.jupiterone.io. So cool.\",\"changedFiles\":4,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/5/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T18:16:38Z\",\"createdAt\":\"2019-03-20T17:02:46Z\",\"deletions\":8,\"editor\":null,\"headRefName\":\"jupiterone-io-docs\",\"headRefOid\":\"e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyOTU1NzA3\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmMxNTg4NWZjZGZmZjhhN2ZlNWFlNDk1YjhjMDc5YThjZjNmZTUwZjA=\",\"oid\":\"c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"message\":\"Merge pull request #5 from JupiterOne/jupiterone-io-docs\\n\\nAdd docs for docs.jupiterone.io\",\"authoredDate\":\"2019-03-20T18:16:37Z\",\"changedFiles\":4,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"author\":{\"date\":\"2019-03-20T14:16:37-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T18:16:38Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":5,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/5\",\"publishedAt\":\"2019-03-20T17:02:46Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Add docs for docs.jupiterone.io\",\"updatedAt\":\"2019-03-20T18:16:40Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/5\",\"commits\":{\"totalCount\":2,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjRiOTZhMDE2NGE2ZmMyNjJjMzY1ZWRkYzc4MGRkYmQ1ZjE3ZGZmZWI=\",\"oid\":\"4b96a0164a6fc262c365eddc780ddbd5f17dffeb\",\"message\":\"Add docs for docs.jupiterone.io & upgrade SDK to v20\",\"authoredDate\":\"2019-03-20T16:54:30Z\",\"changedFiles\":4,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/4b96a0164a6fc262c365eddc780ddbd5f17dffeb\",\"author\":{\"date\":\"2019-03-20T12:54:30-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmU1NjNhNjVmZmJlOWNmNTcwMmQyZGY0N2UzZTY1MTcwZjNlMTE0YWM=\",\"oid\":\"e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"message\":\"0.2.0\",\"authoredDate\":\"2019-03-20T17:38:12Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"author\":{\"date\":\"2019-03-20T13:38:12-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"Mg\",\"hasNextPage\":false}},\"reviews\":{\"totalCount\":3,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2ODYzNzMy\",\"commit\":{\"oid\":\"b8946b84f010da2b5c409618fb04406a49edbc1c\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-20T17:13:09Z\",\"updatedAt\":\"2019-03-20T17:13:09Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/5#pullrequestreview-216863732\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2ODY0OTc2\",\"commit\":{\"oid\":\"b8946b84f010da2b5c409618fb04406a49edbc1c\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-20T17:15:18Z\",\"updatedAt\":\"2019-03-20T17:15:18Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/5#pullrequestreview-216864976\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQxNzoxNToxOFq0MjAxOS0wMy0yMFQxNzoxNToxOFrODO0Y0A==\",\"hasNextPage\":true}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOjI=\",\"hasNextPage\":true}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12471,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:31 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "8026"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12471"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "29"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDF4:75A6:1E8781:2158A1:61315482"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:30.784Z",
        "time": 556,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 556
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 1,
        "cache": {},
        "request": {
          "bodySize": 3290,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $commits: String, $reviews: String, $labels: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n          labels(first: 2, after: $labels) {\\n          totalCount\\n          edges {\\n            node {\\n              id\\n              name\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":6,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"commits\":\"Mg\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 3767,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 3767,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":94,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"\",\"changedFiles\":8,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/6/checks\",\"closed\":true,\"closedAt\":\"2019-03-25T21:15:24Z\",\"createdAt\":\"2019-03-25T18:55:28Z\",\"deletions\":70,\"editor\":null,\"headRefName\":\"improvements\",\"headRefOid\":\"564c61781a4ec3783b635ce53320312db4b79f45\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjY0MjQ3Mjg1\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjI0Njg2OTZmYmZlMjczNjVhMzM3MzViZTlmNDk5ODFiYjUxM2EyOTY=\",\"oid\":\"2468696fbfe27365a33735be9f49981bb513a296\",\"message\":\"Merge pull request #6 from JupiterOne/improvements\\n\\nImprovements\",\"authoredDate\":\"2019-03-25T21:15:24Z\",\"changedFiles\":8,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/2468696fbfe27365a33735be9f49981bb513a296\",\"author\":{\"date\":\"2019-03-25T17:15:24-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-25T21:15:24Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":6,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"publishedAt\":\"2019-03-25T18:55:28Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Improvements\",\"updatedAt\":\"2019-03-25T21:15:27Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY5NzVjZmFhYTE5OTgwYWU5NTY0NmFiZGViN2NiYjk0NWQwNjhjNjQ=\",\"oid\":\"6975cfaaa19980ae95646abdeb7cbb945d068c64\",\"message\":\"Only fetch vulns modified after last job run\",\"authoredDate\":\"2019-03-25T18:46:16Z\",\"changedFiles\":3,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/6975cfaaa19980ae95646abdeb7cbb945d068c64\",\"author\":{\"date\":\"2019-03-25T14:46:16-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmZhZjU2MTgxZWQzMzBkYmQ0NmJhMzUyN2MzYjk5ZmVkYWM0ZDI5MjA=\",\"oid\":\"faf56181ed330dbd46ba3527c3b99fedac4d2920\",\"message\":\"0.2.1\",\"authoredDate\":\"2019-03-25T18:55:59Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/faf56181ed330dbd46ba3527c3b99fedac4d2920\",\"author\":{\"date\":\"2019-03-25T14:55:59-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"NA\",\"hasNextPage\":true}},\"reviews\":{\"totalCount\":2,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE4NTY1NjQ5\",\"commit\":{\"oid\":\"faf56181ed330dbd46ba3527c3b99fedac4d2920\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"DISMISSED\",\"submittedAt\":\"2019-03-25T20:25:44Z\",\"updatedAt\":\"2019-03-25T20:57:44Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6#pullrequestreview-218565649\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE4NTg5MDUw\",\"commit\":{\"oid\":\"564c61781a4ec3783b635ce53320312db4b79f45\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"APPROVED\",\"submittedAt\":\"2019-03-25T21:14:43Z\",\"updatedAt\":\"2019-03-25T21:14:43Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6#pullrequestreview-218589050\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yNVQyMToxNDo0M1q0MjAxOS0wMy0yNVQyMToxNDo0M1rODQdneg==\",\"hasNextPage\":false}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12470,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:31 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "3767"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12470"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "30"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDF5:4B25:34E28B:380AF8:61315483"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:31.344Z",
        "time": 373,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 373
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 2,
        "cache": {},
        "request": {
          "bodySize": 2534,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $commits: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":6,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"commits\":\"NA\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 2397,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 2397,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":94,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"\",\"changedFiles\":8,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/6/checks\",\"closed\":true,\"closedAt\":\"2019-03-25T21:15:24Z\",\"createdAt\":\"2019-03-25T18:55:28Z\",\"deletions\":70,\"editor\":null,\"headRefName\":\"improvements\",\"headRefOid\":\"564c61781a4ec3783b635ce53320312db4b79f45\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjY0MjQ3Mjg1\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjI0Njg2OTZmYmZlMjczNjVhMzM3MzViZTlmNDk5ODFiYjUxM2EyOTY=\",\"oid\":\"2468696fbfe27365a33735be9f49981bb513a296\",\"message\":\"Merge pull request #6 from JupiterOne/improvements\\n\\nImprovements\",\"authoredDate\":\"2019-03-25T21:15:24Z\",\"changedFiles\":8,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/2468696fbfe27365a33735be9f49981bb513a296\",\"author\":{\"date\":\"2019-03-25T17:15:24-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-25T21:15:24Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":6,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"publishedAt\":\"2019-03-25T18:55:28Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Improvements\",\"updatedAt\":\"2019-03-25T21:15:27Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/6\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjU2NGM2MTc4MWE0ZWMzNzgzYjYzNWNlNTMzMjAzMTJkYjRiNzlmNDU=\",\"oid\":\"564c61781a4ec3783b635ce53320312db4b79f45\",\"message\":\"Add test for lastJobCompleted usage\\n\\nAnd get back to 100% coverage!\",\"authoredDate\":\"2019-03-25T20:57:35Z\",\"changedFiles\":3,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/564c61781a4ec3783b635ce53320312db4b79f45\",\"author\":{\"date\":\"2019-03-25T16:57:35-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"NQ\",\"hasNextPage\":false}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12469,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:32 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "2397"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12469"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "31"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDF8:6534:4B8A67:4F184B:61315483"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:31.738Z",
        "time": 300,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 300
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 3,
        "cache": {},
        "request": {
          "bodySize": 3368,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $commits: String, $reviews: String, $labels: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n          labels(first: 2, after: $labels) {\\n          totalCount\\n          edges {\\n            node {\\n              id\\n              name\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":5,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"reviews\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQxNzoxNToxOFq0MjAxOS0wMy0yMFQxNzoxNToxOFrODO0Y0A==\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 3554,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 3554,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":56,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"Tried to publish and an error told me that I needed to write some docs for docs.jupiterone.io. So cool.\",\"changedFiles\":4,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/5/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T18:16:38Z\",\"createdAt\":\"2019-03-20T17:02:46Z\",\"deletions\":8,\"editor\":null,\"headRefName\":\"jupiterone-io-docs\",\"headRefOid\":\"e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyOTU1NzA3\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmMxNTg4NWZjZGZmZjhhN2ZlNWFlNDk1YjhjMDc5YThjZjNmZTUwZjA=\",\"oid\":\"c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"message\":\"Merge pull request #5 from JupiterOne/jupiterone-io-docs\\n\\nAdd docs for docs.jupiterone.io\",\"authoredDate\":\"2019-03-20T18:16:37Z\",\"changedFiles\":4,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/c15885fcdfff8a7fe5ae495b8c079a8cf3fe50f0\",\"author\":{\"date\":\"2019-03-20T14:16:37-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T18:16:38Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":5,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/5\",\"publishedAt\":\"2019-03-20T17:02:46Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Add docs for docs.jupiterone.io\",\"updatedAt\":\"2019-03-20T18:16:40Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/5\",\"commits\":{\"totalCount\":2,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjRiOTZhMDE2NGE2ZmMyNjJjMzY1ZWRkYzc4MGRkYmQ1ZjE3ZGZmZWI=\",\"oid\":\"4b96a0164a6fc262c365eddc780ddbd5f17dffeb\",\"message\":\"Add docs for docs.jupiterone.io & upgrade SDK to v20\",\"authoredDate\":\"2019-03-20T16:54:30Z\",\"changedFiles\":4,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/4b96a0164a6fc262c365eddc780ddbd5f17dffeb\",\"author\":{\"date\":\"2019-03-20T12:54:30-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmU1NjNhNjVmZmJlOWNmNTcwMmQyZGY0N2UzZTY1MTcwZjNlMTE0YWM=\",\"oid\":\"e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"message\":\"0.2.0\",\"authoredDate\":\"2019-03-20T17:38:12Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/e563a65ffbe9cf5702d2df47e3e65170f3e114ac\",\"author\":{\"date\":\"2019-03-20T13:38:12-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"Mg\",\"hasNextPage\":false}},\"reviews\":{\"totalCount\":3,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2ODk3NDg2\",\"commit\":{\"oid\":\"e563a65ffbe9cf5702d2df47e3e65170f3e114ac\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"APPROVED\",\"submittedAt\":\"2019-03-20T18:11:35Z\",\"updatedAt\":\"2019-03-20T18:11:35Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/5#pullrequestreview-216897486\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQxODoxMTozNVq0MjAxOS0wMy0yMFQxODoxMTozNVrODO2Xzg==\",\"hasNextPage\":false}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12468,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:32 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "3554"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12468"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "32"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDF9:18B9:12A9C6:153A21:61315484"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:32.044Z",
        "time": 313,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 313
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 4,
        "cache": {},
        "request": {
          "bodySize": 3368,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequests: String, $query: String!, $commits: String, $reviews: String, $labels: String) {\\n    search(first: 2, after: $pullRequests, type: ISSUE, query: $query) {\\n        issueCount\\n        edges {\\n          node {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n          labels(first: 2, after: $labels) {\\n          totalCount\\n          edges {\\n            node {\\n              id\\n              name\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n        }\\n\\n        pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"query\":\"is:pr repo:JupiterOne/graph-whitehat is:closed updated:<=2019-04-01 \",\"pullRequests\":\"Y3Vyc29yOjI=\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 7168,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 7168,
            "text": "{\"data\":{\"search\":{\"issueCount\":4,\"edges\":[{\"node\":{\"additions\":1281,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"There are a few improvements I want to make (see TODOs in code), but otherwise this is gucci, I think. 🤞 \",\"changedFiles\":16,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/4/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T02:41:01Z\",\"createdAt\":\"2019-03-19T01:37:27Z\",\"deletions\":308,\"editor\":null,\"headRefName\":\"initial\",\"headRefOid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyMjgxNTIy\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY2ZWIxM2UzNzQxYWJhYTkyYWI2YWM4NzA3NDY2ZWQ4ZmUxOGE4OGU=\",\"oid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"message\":\"Merge pull request #4 from JupiterOne/initial\\n\\nIngest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-20T02:41:01Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"author\":{\"date\":\"2019-03-19T22:41:01-04:00\",\"user\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T02:41:01Z\",\"mergedBy\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"number\":4,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"publishedAt\":\"2019-03-19T01:37:27Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Ingest entities & relationships from Whitehat\",\"updatedAt\":\"2019-03-20T02:41:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjMwYWEwY2EyZmUyYTc1MDAyN2U1YzhiMWJlMjI1Zjk2MzUxNTM5NmI=\",\"oid\":\"30aa0ca2fe2a750027e5c8b1be225f963515396b\",\"message\":\"Ingest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-19T01:15:24Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/30aa0ca2fe2a750027e5c8b1be225f963515396b\",\"author\":{\"date\":\"2019-03-18T21:15:24-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjhhODFmMjk3Y2FhMGU4Yjk0MDE4MTg2NzU5OTkxMzA1OGYxMGQ4MzQ=\",\"oid\":\"8a81f297caa0e8b940181867599913058f10d834\",\"message\":\"Use p-map to process apps in parallel\\n\\nUnfortunately I can't turn up the concurrency very high. Whitehat seems\\nto choke with anything above 4 to 5 at a time... :(\",\"authoredDate\":\"2019-03-19T18:47:20Z\",\"changedFiles\":3,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/8a81f297caa0e8b940181867599913058f10d834\",\"author\":{\"date\":\"2019-03-19T14:47:20-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"Mg\",\"hasNextPage\":true}},\"reviews\":{\"totalCount\":9,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1OTMzODEz\",\"commit\":{\"oid\":\"30aa0ca2fe2a750027e5c8b1be225f963515396b\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"CHANGES_REQUESTED\",\"submittedAt\":\"2019-03-19T02:20:15Z\",\"updatedAt\":\"2019-03-19T02:20:15Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-215933813\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2MzU1Mzg5\",\"commit\":{\"oid\":\"9ed6af18e16ac7453d53cd76e22dfa8a96b4783b\"},\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-19T18:50:10Z\",\"updatedAt\":\"2019-03-19T18:50:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216355389\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxODo1MDoxMFq0MjAxOS0wMy0xOVQxODo1MDoxMFrODOVSPQ==\",\"hasNextPage\":true}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}},{\"node\":{\"additions\":1385,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"62cff500b7e5b398bc46c1ebbd7fca84c90bf826\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"Closes #2\",\"changedFiles\":10,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/3/checks\",\"closed\":true,\"closedAt\":\"2019-03-13T19:55:52Z\",\"createdAt\":\"2019-03-13T19:52:57Z\",\"deletions\":20,\"editor\":null,\"headRefName\":\"match-managed-example\",\"headRefOid\":\"1c4b55dae693018e6bd36044f78a5d3700faeb30\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYwOTE1NTI1\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OmU0ZTg2OTkwN2JlMTEyNjk2YTE1YWJlMDFlM2VjNGI2Yzg3MDEwZjc=\",\"oid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"message\":\"Merge pull request #3 from JupiterOne/match-managed-example\\n\\nUpdate to match managed integration example\",\"authoredDate\":\"2019-03-13T19:55:51Z\",\"changedFiles\":10,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/e4e869907be112696a15abe01e3ec4b6c87010f7\",\"author\":{\"date\":\"2019-03-13T15:55:51-04:00\",\"user\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-13T19:55:52Z\",\"mergedBy\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"number\":3,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/3\",\"publishedAt\":\"2019-03-13T19:52:57Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Update to match managed integration example\",\"updatedAt\":\"2019-03-13T19:55:55Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/3\",\"commits\":{\"totalCount\":1,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjFjNGI1NWRhZTY5MzAxOGU2YmQzNjA0NGY3OGE1ZDM3MDBmYWViMzA=\",\"oid\":\"1c4b55dae693018e6bd36044f78a5d3700faeb30\",\"message\":\"Update to match managed integration example\\n\\nCloses #2\",\"authoredDate\":\"2019-03-13T19:51:53Z\",\"changedFiles\":10,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/1c4b55dae693018e6bd36044f78a5d3700faeb30\",\"author\":{\"date\":\"2019-03-13T15:51:53-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"MQ\",\"hasNextPage\":false}},\"reviews\":{\"totalCount\":1,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE0MTc5MTI1\",\"commit\":{\"oid\":\"1c4b55dae693018e6bd36044f78a5d3700faeb30\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"APPROVED\",\"submittedAt\":\"2019-03-13T19:55:18Z\",\"updatedAt\":\"2019-03-13T19:55:18Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/3#pullrequestreview-214179125\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xM1QxOTo1NToxOFq0MjAxOS0wMy0xM1QxOTo1NToxOFrODMQdNQ==\",\"hasNextPage\":false}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOjQ=\",\"hasNextPage\":false}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12467,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:32 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "7168"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12467"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "33"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDFA:18BC:5839EF:5BC52B:61315484"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:32.360Z",
        "time": 447,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 447
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 5,
        "cache": {},
        "request": {
          "bodySize": 3383,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $commits: String, $reviews: String, $labels: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n          labels(first: 2, after: $labels) {\\n          totalCount\\n          edges {\\n            node {\\n              id\\n              name\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":4,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"commits\":\"Mg\",\"reviews\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxODo1MDoxMFq0MjAxOS0wMy0xOVQxODo1MDoxMFrODOVSPQ==\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 3959,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 3959,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":1281,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"There are a few improvements I want to make (see TODOs in code), but otherwise this is gucci, I think. 🤞 \",\"changedFiles\":16,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/4/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T02:41:01Z\",\"createdAt\":\"2019-03-19T01:37:27Z\",\"deletions\":308,\"editor\":null,\"headRefName\":\"initial\",\"headRefOid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyMjgxNTIy\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY2ZWIxM2UzNzQxYWJhYTkyYWI2YWM4NzA3NDY2ZWQ4ZmUxOGE4OGU=\",\"oid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"message\":\"Merge pull request #4 from JupiterOne/initial\\n\\nIngest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-20T02:41:01Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"author\":{\"date\":\"2019-03-19T22:41:01-04:00\",\"user\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T02:41:01Z\",\"mergedBy\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"number\":4,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"publishedAt\":\"2019-03-19T01:37:27Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Ingest entities & relationships from Whitehat\",\"updatedAt\":\"2019-03-20T02:41:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY5ODRkOGQ1MDRhYTcwYmY4Y2QxNDU2MzRlY2MyZjBhZTNmY2Y3ZTg=\",\"oid\":\"6984d8d504aa70bf8cd145634ecc2f0ae3fcf7e8\",\"message\":\"Use findByType functions\",\"authoredDate\":\"2019-03-19T18:47:46Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/6984d8d504aa70bf8cd145634ecc2f0ae3fcf7e8\",\"author\":{\"date\":\"2019-03-19T14:47:46-04:00\",\"user\":null}}}},{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjRkZGIyMmE0ZTI0ZTU3NjEyMmViYzQ0YWZjZTBjODdiNzA5NjUxYzk=\",\"oid\":\"4ddb22a4e24e576122ebc44afce0c87b709651c9\",\"message\":\"Validate Whitehat API key to throw proper error\",\"authoredDate\":\"2019-03-19T18:48:23Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/4ddb22a4e24e576122ebc44afce0c87b709651c9\",\"author\":{\"date\":\"2019-03-19T14:48:23-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"NA\",\"hasNextPage\":true}},\"reviews\":{\"totalCount\":9,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2MzY3Mjcy\",\"commit\":{\"oid\":\"9df043d24c557510c38036576dd791c537c07ff7\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-19T19:15:26Z\",\"updatedAt\":\"2019-03-19T19:15:26Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216367272\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2MzY4NTUz\",\"commit\":{\"oid\":\"9df043d24c557510c38036576dd791c537c07ff7\"},\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-19T19:18:16Z\",\"updatedAt\":\"2019-03-19T19:18:17Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216368553\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxOToxODoxNlq0MjAxOS0wMy0xOVQxOToxODoxNlrODOWFqQ==\",\"hasNextPage\":true}},\"labels\":{\"totalCount\":0,\"edges\":[],\"pageInfo\":{\"endCursor\":null,\"hasNextPage\":false}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12466,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:33 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "3959"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12466"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "34"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDFB:7017:492FB8:4CAB4F:61315484"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:32.810Z",
        "time": 363,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 363
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 6,
        "cache": {},
        "request": {
          "bodySize": 3096,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $commits: String, $reviews: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        commits(first: 2, after: $commits) {\\n          totalCount\\n          edges {\\n            node {\\n              commit {\\n                ... commitFields\\n              }\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":4,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"commits\":\"NA\",\"reviews\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxOToxODoxNlq0MjAxOS0wMy0xOVQxOToxODoxNlrODOWFqQ==\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 3434,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 3434,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":1281,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"There are a few improvements I want to make (see TODOs in code), but otherwise this is gucci, I think. 🤞 \",\"changedFiles\":16,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/4/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T02:41:01Z\",\"createdAt\":\"2019-03-19T01:37:27Z\",\"deletions\":308,\"editor\":null,\"headRefName\":\"initial\",\"headRefOid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyMjgxNTIy\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY2ZWIxM2UzNzQxYWJhYTkyYWI2YWM4NzA3NDY2ZWQ4ZmUxOGE4OGU=\",\"oid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"message\":\"Merge pull request #4 from JupiterOne/initial\\n\\nIngest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-20T02:41:01Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"author\":{\"date\":\"2019-03-19T22:41:01-04:00\",\"user\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T02:41:01Z\",\"mergedBy\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"number\":4,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"publishedAt\":\"2019-03-19T01:37:27Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Ingest entities & relationships from Whitehat\",\"updatedAt\":\"2019-03-20T02:41:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"commits\":{\"totalCount\":5,\"edges\":[{\"node\":{\"commit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjExMzBmN2FhZGM2NDExY2YzMDU1MzZmZWM3NzhhYTA1NGRkYTE2NTc=\",\"oid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"message\":\"Add invalid API key test\",\"authoredDate\":\"2019-03-19T19:10:48Z\",\"changedFiles\":1,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/1130f7aadc6411cf305536fec778aa054dda1657\",\"author\":{\"date\":\"2019-03-19T15:10:48-04:00\",\"user\":null}}}}],\"pageInfo\":{\"endCursor\":\"NQ\",\"hasNextPage\":false}},\"reviews\":{\"totalCount\":9,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2MzcyMzcx\",\"commit\":{\"oid\":\"9df043d24c557510c38036576dd791c537c07ff7\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-19T19:26:40Z\",\"updatedAt\":\"2019-03-19T19:26:40Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216372371\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2Mzc2MDYz\",\"commit\":{\"oid\":\"13e03e36b31162af5251a14ae41b00210c11a9aa\"},\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-19T19:34:56Z\",\"updatedAt\":\"2019-03-19T19:34:56Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216376063\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxOTozNDo1Nlq0MjAxOS0wMy0xOVQxOTozNDo1NlrODOWi_w==\",\"hasNextPage\":true}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12465,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:33 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "3434"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12465"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "35"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDFC:9E64:230429:25D1FF:61315485"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:33.178Z",
        "time": 377,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 377
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 7,
        "cache": {},
        "request": {
          "bodySize": 2756,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $reviews: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":4,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"reviews\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0xOVQxOTozNDo1Nlq0MjAxOS0wMy0xOVQxOTozNDo1NlrODOWi_w==\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 2931,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 2931,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":1281,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"There are a few improvements I want to make (see TODOs in code), but otherwise this is gucci, I think. 🤞 \",\"changedFiles\":16,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/4/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T02:41:01Z\",\"createdAt\":\"2019-03-19T01:37:27Z\",\"deletions\":308,\"editor\":null,\"headRefName\":\"initial\",\"headRefOid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyMjgxNTIy\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY2ZWIxM2UzNzQxYWJhYTkyYWI2YWM4NzA3NDY2ZWQ4ZmUxOGE4OGU=\",\"oid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"message\":\"Merge pull request #4 from JupiterOne/initial\\n\\nIngest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-20T02:41:01Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"author\":{\"date\":\"2019-03-19T22:41:01-04:00\",\"user\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T02:41:01Z\",\"mergedBy\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"number\":4,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"publishedAt\":\"2019-03-19T01:37:27Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Ingest entities & relationships from Whitehat\",\"updatedAt\":\"2019-03-20T02:41:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"reviews\":{\"totalCount\":9,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2NDgyNTk3\",\"commit\":{\"oid\":\"13e03e36b31162af5251a14ae41b00210c11a9aa\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"DISMISSED\",\"submittedAt\":\"2019-03-20T00:33:40Z\",\"updatedAt\":\"2019-03-20T02:11:30Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216482597\"}},{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2NTAwODYz\",\"commit\":{\"oid\":\"1130f7aadc6411cf305536fec778aa054dda1657\"},\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"state\":\"COMMENTED\",\"submittedAt\":\"2019-03-20T02:11:48Z\",\"updatedAt\":\"2019-03-20T02:11:48Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216500863\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQwMjoxMTo0OFq0MjAxOS0wMy0yMFQwMjoxMTo0OFrODOeKfw==\",\"hasNextPage\":true}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12464,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:34 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "2931"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12464"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "36"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDFD:75A7:373E83:3A69FA:61315485"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:33.560Z",
        "time": 372,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 372
        }
      },
      {
        "_id": "22e4c882794d943e8a6f0961702d5000",
        "_order": 8,
        "cache": {},
        "request": {
          "bodySize": 2756,
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "jupiterone-graph-github"
            },
            {
              "name": "authorization",
              "value": "Bearer [REDACTED]"
            },
            {
              "name": "host",
              "value": "api.github.com"
            }
          ],
          "headersSize": 228,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"query\":\"query ($pullRequestNumber: Int!, $repoName: String!, $repoOwner: String!, $reviews: String) {\\n    repository(name: $repoName, owner: $repoOwner) {\\n          pullRequest(number: $pullRequestNumber) {\\n            ... pullRequestFields\\n            ... on PullRequest {\\n        reviews(first: 2, after: $reviews) {\\n          totalCount\\n          edges {\\n            node {\\n              ... reviewFields\\n            }\\n          }\\n\\n          pageInfo {\\n  endCursor\\n  hasNextPage\\n}\\n        }\\n      }\\n          }\\n      }\\n... rateLimit\\n  }\\n\\nfragment userFields on User {\\n    login\\n    name\\n    isSiteAdmin\\n  }\\n\\nfragment commitFields on Commit {\\n    id\\n    oid\\n    message\\n    authoredDate\\n    changedFiles\\n    commitUrl\\n    author {\\n      date\\n      user {\\n        ...userFields\\n      }\\n    }\\n  }\\n\\nfragment pullRequestFields on PullRequest {\\n    additions\\n    author {\\n      ...userFields\\n    }\\n    authorAssociation\\n    baseRefName\\n    baseRefOid\\n    baseRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    body\\n    changedFiles\\n    checksUrl\\n    closed\\n    closedAt\\n    # comments(first: 100) {  # Might be nice to know who is commenting\\n    # commits(first: 100) {  # Handling in the query builder\\n    createdAt\\n    deletions\\n    editor {\\n      ...userFields\\n    }\\n    # files(first: 100) {  # Someday it would be great to connect PRs to files that create infrastructure\\n    headRefName\\n    headRefOid\\n    headRepository {\\n      name\\n      nameWithOwner\\n      owner {\\n        ...userFields\\n      }\\n    }\\n    id\\n    isDraft\\n    # labels(first 100) {  # Handling in the query builder\\n    lastEditedAt\\n    locked\\n    mergeCommit {\\n      ...commitFields\\n    }\\n    mergeable\\n    merged\\n    mergedAt\\n    mergedBy {\\n      ...userFields\\n    }\\n    number\\n    permalink\\n    publishedAt\\n    reviewDecision\\n    # reviewRequests(first: 100) {  # Someday it would be nice to see how many users reviewed that were requested\\n    # reviews(first: 100) {  # Handling in the query builder\\n    state\\n    # suggestedReviewers  # Might be fun to know if the suggested reviewers were used or not\\n    title\\n    updatedAt\\n    url\\n  }\\n\\nfragment reviewFields on PullRequestReview {\\n    id\\n    commit {\\n      oid\\n    }\\n    author {\\n      ...userFields\\n    }\\n    state\\n    submittedAt\\n    updatedAt\\n    url\\n  }\\n\\nfragment rateLimit on Query {\\n    rateLimit {\\n      limit\\n      cost\\n      remaining\\n      resetAt\\n    }\\n  }\",\"variables\":{\"pullRequestNumber\":4,\"repoName\":\"graph-whitehat\",\"repoOwner\":\"JupiterOne\",\"reviews\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQwMjoxMTo0OFq0MjAxOS0wMy0yMFQwMjoxMTo0OFrODOeKfw==\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 2558,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 2558,
            "text": "{\"data\":{\"repository\":{\"pullRequest\":{\"additions\":1281,\"author\":{\"login\":\"fomentia\",\"name\":\"Isaac Williams\",\"isSiteAdmin\":false},\"authorAssociation\":\"MEMBER\",\"baseRefName\":\"master\",\"baseRefOid\":\"e4e869907be112696a15abe01e3ec4b6c87010f7\",\"baseRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"body\":\"There are a few improvements I want to make (see TODOs in code), but otherwise this is gucci, I think. 🤞 \",\"changedFiles\":16,\"checksUrl\":\"https://github.com/JupiterOne/graph-whitehat/pull/4/checks\",\"closed\":true,\"closedAt\":\"2019-03-20T02:41:01Z\",\"createdAt\":\"2019-03-19T01:37:27Z\",\"deletions\":308,\"editor\":null,\"headRefName\":\"initial\",\"headRefOid\":\"1130f7aadc6411cf305536fec778aa054dda1657\",\"headRepository\":{\"name\":\"graph-whitehat\",\"nameWithOwner\":\"JupiterOne/graph-whitehat\",\"owner\":{}},\"id\":\"MDExOlB1bGxSZXF1ZXN0MjYyMjgxNTIy\",\"isDraft\":false,\"lastEditedAt\":null,\"locked\":false,\"mergeCommit\":{\"id\":\"MDY6Q29tbWl0MTcxOTExMTM5OjY2ZWIxM2UzNzQxYWJhYTkyYWI2YWM4NzA3NDY2ZWQ4ZmUxOGE4OGU=\",\"oid\":\"66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"message\":\"Merge pull request #4 from JupiterOne/initial\\n\\nIngest entities & relationships from Whitehat\",\"authoredDate\":\"2019-03-20T02:41:01Z\",\"changedFiles\":16,\"commitUrl\":\"https://github.com/JupiterOne/graph-whitehat/commit/66eb13e3741abaa92ab6ac8707466ed8fe18a88e\",\"author\":{\"date\":\"2019-03-19T22:41:01-04:00\",\"user\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false}}},\"mergeable\":\"CONFLICTING\",\"merged\":true,\"mergedAt\":\"2019-03-20T02:41:01Z\",\"mergedBy\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"number\":4,\"permalink\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"publishedAt\":\"2019-03-19T01:37:27Z\",\"reviewDecision\":\"APPROVED\",\"state\":\"MERGED\",\"title\":\"Ingest entities & relationships from Whitehat\",\"updatedAt\":\"2019-03-20T02:41:10Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4\",\"reviews\":{\"totalCount\":9,\"edges\":[{\"node\":{\"id\":\"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2NTA1OTk4\",\"commit\":{\"oid\":\"1130f7aadc6411cf305536fec778aa054dda1657\"},\"author\":{\"login\":\"aiwilliams\",\"name\":\"Adam Williams\",\"isSiteAdmin\":false},\"state\":\"APPROVED\",\"submittedAt\":\"2019-03-20T02:40:24Z\",\"updatedAt\":\"2019-03-20T02:40:24Z\",\"url\":\"https://github.com/JupiterOne/graph-whitehat/pull/4#pullrequestreview-216505998\"}}],\"pageInfo\":{\"endCursor\":\"Y3Vyc29yOnYyOpO0MjAxOS0wMy0yMFQwMjo0MDoyNFq0MjAxOS0wMy0yMFQwMjo0MDoyNFrODOeejg==\",\"hasNextPage\":false}}}},\"rateLimit\":{\"limit\":12500,\"cost\":1,\"remaining\":12463,\"resetAt\":\"2021-09-02T23:29:46Z\"}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "server",
              "value": "GitHub.com"
            },
            {
              "name": "date",
              "value": "Thu, 02 Sep 2021 22:47:34 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "2558"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v4"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "12500"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "12463"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1630625386"
            },
            {
              "name": "x-ratelimit-used",
              "value": "37"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-github-request-id",
              "value": "EDFE:18BB:2DBB50:30E56A:61315486"
            },
            {
              "name": "connection",
              "value": "close"
            }
          ],
          "headersSize": 1007,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2021-09-02T22:47:33.936Z",
        "time": 373,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 373
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
